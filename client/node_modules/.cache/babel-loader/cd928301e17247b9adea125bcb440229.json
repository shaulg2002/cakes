{"ast":null,"code":"var _jsxFileName = \"/Users/shaulgittelman/Desktop/fullstack/Cakes/client/src/components/pages/MyCart.js\";\nimport React, { Component } from \"react\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getCartItems, deleteItemFromCart } from \"../../actions/cartActions\";\nexport class MyCart extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDeleteClick = id => {\n      this.props.deleteItemFromCart(id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCartItems();\n  }\n\n  render() {\n    const _this$props$auth = this.props.auth,\n          isAuthenticated = _this$props$auth.isAuthenticated,\n          user = _this$props$auth.user;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.props.cartItems.items.map(id => {\n      {\n        this.props.items.map(item => {\n          if (item._id == id) React.createElement(\"h1\", {\n            key: id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, name);\n        });\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  auth: state.auth,\n  cartItems: state.cartItem,\n  items: state.Item\n});\n\nexport default connect(mapStateToProps, {\n  getCartItems,\n  deleteItemFromCart\n})(MyCart);","map":{"version":3,"sources":["/Users/shaulgittelman/Desktop/fullstack/Cakes/client/src/components/pages/MyCart.js"],"names":["React","Component","ListGroup","ListGroupItem","connect","getCartItems","deleteItemFromCart","MyCart","onDeleteClick","id","props","componentDidMount","render","auth","isAuthenticated","user","cartItems","items","map","item","_id","name","mapStateToProps","state","cartItem","Item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,YAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,kBAAvB,QAAiD,2BAAjD;AAEA,OAAO,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAKpCO,aALoC,GAKpBC,EAAE,IAAI;AACpB,WAAKC,KAAL,CAAWJ,kBAAX,CAA8BG,EAA9B;AACD,KAPmC;AAAA;;AACpCE,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,KAAL,CAAWL,YAAX;AACD;;AAMDO,EAAAA,MAAM,GAAG;AAAA,6BAC2B,KAAKF,KAAL,CAAWG,IADtC;AAAA,UACCC,eADD,oBACCA,eADD;AAAA,UACkBC,IADlB,oBACkBA,IADlB;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,KAAL,CAAWM,SAAX,CAAqBC,KAArB,CAA2BC,GAA3B,CAA+BT,EAAE,IAAI;AACpC;AACE,aAAKC,KAAL,CAAWO,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IAAI;AAC3B,cAAGA,IAAI,CAACC,GAAL,IAAYX,EAAf,EACD;AAAI,YAAA,GAAG,EAAEA,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAcY,IAAd;AACA,SAHD;AAID;AACF,KAPA,CADH,CADF;AAYD;;AAxBmC;;AA2BtC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCT,EAAAA,eAAe,EAAES,KAAK,CAACV,IAAN,CAAWC,eADI;AAEhCD,EAAAA,IAAI,EAAEU,KAAK,CAACV,IAFoB;AAGhCG,EAAAA,SAAS,EAAEO,KAAK,CAACC,QAHe;AAIhCP,EAAAA,KAAK,EAAEM,KAAK,CAACE;AAJmB,CAAL,CAA7B;;AAOA,eAAerB,OAAO,CACpBkB,eADoB,EAEpB;AAAEjB,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAFoB,CAAP,CAGbC,MAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getCartItems, deleteItemFromCart } from \"../../actions/cartActions\";\n\nexport class MyCart extends Component {\n  componentDidMount() {\n    this.props.getCartItems();\n  }\n\n  onDeleteClick = id => {\n    this.props.deleteItemFromCart(id);\n  };\n\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n\n    return (\n      <div>\n        {this.props.cartItems.items.map(id => {\n          {\n            this.props.items.map(item => {\n              if(item._id == id)\n             <h1 key={id}>{name}</h1> \n            });\n          }\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  auth: state.auth,\n  cartItems: state.cartItem,\n  items: state.Item\n});\n\nexport default connect(\n  mapStateToProps,\n  { getCartItems, deleteItemFromCart }\n)(MyCart);\n"]},"metadata":{},"sourceType":"module"}