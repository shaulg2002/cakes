{"ast":null,"code":"import axios from 'axios';\nimport { GET_CART_ITEMS, ADD_ITEM_TO_CART, DELETE_ITEM_FROM_CART, CART_ITEMS_LOADING } from './types';\nimport { returnErrors } from './errorActions'; // import {tokenConfig} from './authActions';\n\nexport const getCartItems = () => (dispatch, getStates) => {\n  dispatch(setCartItemsLoading());\n  axios.get('/api/cart', tokenConfig(getStates)).then(res => dispatch({\n    type: GET_CART_ITEMS,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const addItemToCart = id => (dispatch, getStates) => {\n  axios.post(\"/api/cart/\".concat(id), tokenConfig(getStates)).then(res => dispatch({\n    type: ADD_ITEM_TO_CART,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const deleteItemFromCart = id => (dispatch, getStates) => {\n  axios.delete(\"/api/items/\".concat(id), tokenConfig(getStates)).then(res => dispatch({\n    type: DELETE_ITEM_FROM_CART,\n    payload: id\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const setCartItemsLoading = () => {\n  return {\n    type: CART_ITEMS_LOADING\n  };\n};\n\nconst tokenConfig = getState => {\n  //Get token from localstorage\n  const token = getState().auth.token; //Headers\n\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    } // If token, add to headers\n\n  };\n\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  return config;\n};","map":{"version":3,"sources":["/Users/shaulgittelman/Desktop/fullstack/Cakes/client/src/actions/cartActions.js"],"names":["axios","GET_CART_ITEMS","ADD_ITEM_TO_CART","DELETE_ITEM_FROM_CART","CART_ITEMS_LOADING","returnErrors","getCartItems","dispatch","getStates","setCartItemsLoading","get","tokenConfig","then","res","type","payload","data","catch","err","response","status","addItemToCart","id","post","deleteItemFromCart","delete","getState","token","auth","config","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,EAAwBC,gBAAxB,EAA0CC,qBAA1C,EAAiEC,kBAAjE,QAA0F,SAA1F;AACA,SAAQC,YAAR,QAA2B,gBAA3B,C,CACA;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM,CAACC,QAAD,EAAWC,SAAX,KAAyB;AACvDD,EAAAA,QAAQ,CAACE,mBAAmB,EAApB,CAAR;AACAT,EAAAA,KAAK,CACHU,GADF,CACM,WADN,EACmBC,WAAW,CAACH,SAAD,CAD9B,EAEEI,IAFF,CAEOC,GAAG,IACNN,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAEb,cADD;AAELc,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,GAAD,CAHZ,EAOKC,KAPL,CAOWC,GAAG,IAAIX,QAAQ,CAACF,YAAY,CAACa,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAP1B;AAQH,CAVM;AAYP,OAAO,MAAMC,aAAa,GAAIC,EAAD,IAAQ,CAACf,QAAD,EAAUC,SAAV,KAAwB;AACzDR,EAAAA,KAAK,CACHuB,IADF,qBACoBD,EADpB,GAC0BX,WAAW,CAACH,SAAD,CADrC,EAEEI,IAFF,CAEOC,GAAG,IACNN,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAEZ,gBADD;AAELa,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,GAAD,CAHZ,EAOCC,KAPD,CAOOC,GAAG,IAAIX,QAAQ,CAACF,YAAY,CAACa,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAPtB;AAQH,CATM;AAWP,OAAO,MAAMI,kBAAkB,GAAIF,EAAD,IAAQ,CAACf,QAAD,EAAWC,SAAX,KAAyB;AAC/DR,EAAAA,KAAK,CACHyB,MADF,sBACuBH,EADvB,GAC6BX,WAAW,CAACH,SAAD,CADxC,EAEEI,IAFF,CAEOC,GAAG,IAAIN,QAAQ,CAAC;AAClBO,IAAAA,IAAI,EAAEX,qBADY;AAElBY,IAAAA,OAAO,EAAEO;AAFS,GAAD,CAFtB,EAMEL,KANF,CAMQC,GAAG,IAAIX,QAAQ,CAACF,YAAY,CAACa,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CANvB;AAQH,CATM;AAWP,OAAO,MAAMX,mBAAmB,GAAG,MAAM;AACrC,SAAM;AACFK,IAAAA,IAAI,EAAEV;AADJ,GAAN;AAGH,CAJM;;AAMP,MAAMO,WAAW,GAAGe,QAAQ,IAAI;AAC5B;AACA,QAAMC,KAAK,GAAGD,QAAQ,GAAGE,IAAX,CAAgBD,KAA9B,CAF4B,CAI5B;;AACA,QAAME,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAe;AADV,KADE,CAMf;;AANe,GAAf;;AAOA,MAAGH,KAAH,EAAU;AACNE,IAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAA+BH,KAA/B;AACH;;AAED,SAAOE,MAAP;AACH,CAjBD","sourcesContent":["import axios from 'axios';\nimport {GET_CART_ITEMS, ADD_ITEM_TO_CART, DELETE_ITEM_FROM_CART, CART_ITEMS_LOADING} from './types';\nimport {returnErrors} from './errorActions';\n// import {tokenConfig} from './authActions';\n\nexport const getCartItems = () => (dispatch, getStates) => {\n    dispatch(setCartItemsLoading());\n    axios\n     .get('/api/cart', tokenConfig(getStates))\n     .then(res => \n        dispatch({\n            type: GET_CART_ITEMS,\n            payload: res.data\n        }))\n        .catch(err => dispatch(returnErrors(err.response.data, err.response.status )));\n}\n\nexport const addItemToCart = (id) => (dispatch,getStates) => {\n    axios\n     .post(`/api/cart/${id}`, tokenConfig(getStates))\n     .then(res => \n        dispatch({\n            type: ADD_ITEM_TO_CART,\n            payload: res.data\n    }))\n    .catch(err => dispatch(returnErrors(err.response.data, err.response.status )));\n}\n\nexport const deleteItemFromCart = (id) => (dispatch, getStates) => {\n    axios\n     .delete(`/api/items/${id}`, tokenConfig(getStates))\n     .then(res => dispatch({\n         type: DELETE_ITEM_FROM_CART,\n         payload: id\n     }))\n     .catch(err => dispatch(returnErrors(err.response.data, err.response.status )));\n   \n}\n\nexport const setCartItemsLoading = () => {\n    return{\n        type: CART_ITEMS_LOADING\n    };\n};\n\nconst tokenConfig = getState => {\n    //Get token from localstorage\n    const token = getState().auth.token;\n\n    //Headers\n    const config = {\n        headers: {\n            \"Content-type\":\"application/json\"\n        }\n    }\n\n    // If token, add to headers\n    if(token) {\n        config.headers['x-auth-token']=token;\n    }\n\n    return config;\n}"]},"metadata":{},"sourceType":"module"}