{"ast":null,"code":"var _jsxFileName = \"/Users/shaulgittelman/Desktop/fullstack/Cakes/client/src/components/CakeList.js\";\nimport React, { Component } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button, Row, Col, Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport { getItems, deleteItem } from \"../actions/itemActions\";\nimport PropTypes from \"prop-types\";\n\nclass CakeList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDeleteClick = id => {\n      this.props.deleteItem(id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  render() {\n    const items = this.props.item.items;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, items.map(({\n      _id,\n      name,\n      price\n    }) => React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      top: true,\n      width: \"100%\",\n      src: \"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\",\n      alt: \"Card image cap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, name), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Card subtitle\"), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, price, \" \\u20AA\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Button\")))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))))) // <ListGroup>\n    //   <TransitionGroup className=\"cake-list\">\n    //     {items.map(({ _id, name, price }) => (\n    //       <CSSTransition key={_id} timeout={500} classNames=\"fade\">\n    //         <ListGroupItem>\n    //           {this.props.isAuthenticated ? (\n    //             <Button\n    //               className=\"remove-btn\"\n    //               color=\"danger\"\n    //               size=\"sm\"\n    //               onClick={this.onDeleteClick.bind(this, _id)}\n    //             >\n    //               &times;\n    //             </Button>\n    //           ) : null}\n    //           {name}\n    //           <div style={{ float: \"right\" }}>{price} </div>\n    //         </ListGroupItem>\n    //       </CSSTransition>\n    //     ))}\n    //   </TransitionGroup>\n    // </ListGroup>\n    //   </Container>\n    ;\n  }\n\n}\n\nCakeList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  getItems,\n  deleteItem\n})(CakeList);","map":{"version":3,"sources":["/Users/shaulgittelman/Desktop/fullstack/Cakes/client/src/components/CakeList.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","Row","Col","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","CSSTransition","TransitionGroup","connect","getItems","deleteItem","PropTypes","CakeList","onDeleteClick","id","props","componentDidMount","render","items","item","map","_id","name","price","propTypes","func","isRequired","object","isAuthenticated","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Button,\n  Row,\n  Col,\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle\n} from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport { getItems, deleteItem } from \"../actions/itemActions\";\nimport PropTypes from \"prop-types\";\n\nclass CakeList extends Component {\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  onDeleteClick = id => {\n    this.props.deleteItem(id);\n  };\n\n  render() {\n    const { items } = this.props.item;\n    return (\n      <Container>\n          <TransitionGroup>\n          {items.map(({ _id, name, price }) => (\n        <Row>\n          <Col>\n            <Card>\n              <CardImg\n                top\n                width=\"100%\"\n                src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\"\n                alt=\"Card image cap\"\n              />\n              <CardBody>\n                <CardTitle>{name}</CardTitle>\n                <CardSubtitle>Card subtitle</CardSubtitle>\n                <CardText>\n                  {price} â‚ª\n                </CardText>\n                <Button>Button</Button>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col />\n          <Col />\n        </Row>))}\n        </TransitionGroup>\n        </Container>\n\n        // <ListGroup>\n        //   <TransitionGroup className=\"cake-list\">\n        //     {items.map(({ _id, name, price }) => (\n        //       <CSSTransition key={_id} timeout={500} classNames=\"fade\">\n        //         <ListGroupItem>\n        //           {this.props.isAuthenticated ? (\n        //             <Button\n        //               className=\"remove-btn\"\n        //               color=\"danger\"\n        //               size=\"sm\"\n        //               onClick={this.onDeleteClick.bind(this, _id)}\n        //             >\n        //               &times;\n        //             </Button>\n        //           ) : null}\n\n        //           {name}\n        //           <div style={{ float: \"right\" }}>{price} </div>\n        //         </ListGroupItem>\n        //       </CSSTransition>\n        //     ))}\n        //   </TransitionGroup>\n        // </ListGroup>\n    //   </Container>\n    );\n  }\n}\n\nCakeList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(\n  mapStateToProps,\n  { getItems, deleteItem }\n)(CakeList);\n"]},"metadata":{},"sourceType":"module"}