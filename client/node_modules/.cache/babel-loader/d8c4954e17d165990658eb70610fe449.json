{"ast":null,"code":"var _jsxFileName = \"/Users/shaulgittelman/Desktop/fullstack/Cakes/client/src/components/CakeList.js\";\nimport React, { Component } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button, Row, Col, Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport { getItems, deleteItem } from \"../actions/itemActions\";\nimport PropTypes from \"prop-types\";\n\nclass CakeList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDeleteClick = id => {\n      this.props.deleteItem(id);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  render() {\n    const items = this.props.item.items;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      top: true,\n      width: \"100%\",\n      src: \"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\",\n      alt: \"Card image cap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Card title\"), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Card subtitle\"), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Button\")))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      className: \"cake-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, items.map(({\n      _id,\n      name,\n      price\n    }) => React.createElement(CSSTransition, {\n      key: _id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.props.isAuthenticated ? React.createElement(Button, {\n      className: \"remove-btn\",\n      color: \"danger\",\n      size: \"sm\",\n      onClick: this.onDeleteClick.bind(this, _id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"\\xD7\") : null, name, React.createElement(\"div\", {\n      style: {\n        float: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, price, \" \\u20AA\")))))));\n  }\n\n}\n\nCakeList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  getItems,\n  deleteItem\n})(CakeList);","map":{"version":3,"sources":["/Users/shaulgittelman/Desktop/fullstack/Cakes/client/src/components/CakeList.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","Row","Col","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","CSSTransition","TransitionGroup","connect","getItems","deleteItem","PropTypes","CakeList","onDeleteClick","id","props","componentDidMount","render","items","item","map","_id","name","price","isAuthenticated","bind","float","propTypes","func","isRequired","object","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Button,\n  Row,\n  Col,\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle\n} from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport { getItems, deleteItem } from \"../actions/itemActions\";\nimport PropTypes from \"prop-types\";\n\nclass CakeList extends Component {\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  onDeleteClick = id => {\n    this.props.deleteItem(id);\n  };\n\n  render() {\n    const { items } = this.props.item;\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <Card>\n              <CardImg\n                top\n                width=\"100%\"\n                src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\"\n                alt=\"Card image cap\"\n              />\n              <CardBody>\n                <CardTitle>Card title</CardTitle>\n                <CardSubtitle>Card subtitle</CardSubtitle>\n                <CardText>\n                  Some quick example text to build on the card title and make up\n                  the bulk of the card's content.\n                </CardText>\n                <Button>Button</Button>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col />\n          <Col />\n        </Row>\n\n        <ListGroup>\n          <TransitionGroup className=\"cake-list\">\n            {items.map(({ _id, name, price }) => (\n              <CSSTransition key={_id} timeout={500} classNames=\"fade\">\n                <ListGroupItem>\n                  {this.props.isAuthenticated ? (\n                    <Button\n                      className=\"remove-btn\"\n                      color=\"danger\"\n                      size=\"sm\"\n                      onClick={this.onDeleteClick.bind(this, _id)}\n                    >\n                      &times;\n                    </Button>\n                  ) : null}\n\n                  {name}\n                  <div style={{ float: \"right\" }}>{price} â‚ª</div>\n                </ListGroupItem>\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n        </ListGroup>\n      </Container>\n    );\n  }\n}\n\nCakeList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(\n  mapStateToProps,\n  { getItems, deleteItem }\n)(CakeList);\n"]},"metadata":{},"sourceType":"module"}