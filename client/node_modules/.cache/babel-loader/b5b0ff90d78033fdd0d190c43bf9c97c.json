{"ast":null,"code":"var _jsxFileName = \"/Users/shaulgittelman/Desktop/fullstack/Cakes/client/src/components/auth/LoginModal.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, NavLink, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\n\nclass LoginModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      email: '',\n      password: '',\n      msg: null\n    };\n\n    this.toggle = () => {\n      this.props.clearErrors();\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password; //Attempt to Login\n\n      this.props.login({\n        email,\n        password\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const _this$props = this.props,\n          error = _this$props.error,\n          isAuthenticated = _this$props.isAuthenticated;\n\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'LOGIN_FAIL') {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    } // Toggle off if registration succedded\n\n\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: \"AuthBtn\",\n      onClick: this.toggle,\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"LOGIN\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"LOGIN\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.msg ? React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.msg) : null, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"Email\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"Password\",\n      className: \"mb-3\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginTop: '2rem'\n      },\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"LOGIN\"))))));\n  }\n\n}\n\nLoginModal.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  clearErrors\n})(LoginModal);","map":{"version":3,"sources":["/Users/shaulgittelman/Desktop/fullstack/Cakes/client/src/components/auth/LoginModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","NavLink","Alert","connect","PropTypes","login","clearErrors","LoginModal","state","modal","email","password","msg","toggle","props","setState","onChange","e","target","name","value","onSubmit","preventDefault","componentDidUpdate","prevProps","error","isAuthenticated","id","render","marginTop","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\n\nclass LoginModal extends Component {\n    state = {\n        modal: false,\n        email: '',\n        password:'',\n        msg: null\n    };\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool,\n        error: PropTypes.object.isRequired,\n        login: PropTypes.func.isRequired,\n        clearErrors: PropTypes.func.isRequired\n    }\n\n    componentDidUpdate(prevProps){\n        const {error, isAuthenticated}  = this.props;\n        if(error !== prevProps.error){\n            // Check for register error\n            if(error.id === 'LOGIN_FAIL'){\n                this.setState({msg: error.msg.msg});\n            } else {\n                this.setState({ msg: null });\n            }\n        }\n        \n        // Toggle off if registration succedded\n        if(this.state.modal){\n            if(isAuthenticated){\n                this.toggle();\n            }\n        }\n    }\n\n    toggle = () => {\n        this.props.clearErrors();\n        this.setState({\n        modal: !this.state.modal\n        });\n    }   \n\n    onChange = (e) => {\n        this.setState({[e.target.name] : e.target.value});\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const {email , password} = this.state;\n\n        //Attempt to Login\n        this.props.login({email, password});\n      \n    }\n\n    render(){\n        return(\n            <div>\n                <NavLink className=\"AuthBtn\" onClick={this.toggle} href=\"#\">\n                    LOGIN\n                </NavLink>\n                <Modal\n                    isOpen={this.state.modal}\n                    toggle={this.toggle}\n                    >\n                <ModalHeader toggle={this.toggle}>\n                    LOGIN\n                </ModalHeader>\n                <ModalBody>\n                    { this.state.msg ? <Alert color=\"danger\">{ this.state.msg }</Alert> : null}\n                    <Form onSubmit={this.onSubmit}>\n                        <FormGroup> \n                            <Label for=\"email\">Email</Label>\n                            <Input\n                            type='email'\n                            name='email'\n                            id='email'\n                            placeholder='Email'\n                            className ='mb-3'\n                            onChange={this.onChange}>\n                            </Input>\n\n                            <Label for=\"password\">Password</Label>\n                            <Input\n                            type='password'\n                            name='password'\n                            id='password'\n                            placeholder=\"Password\"\n                            className ='mb-3'\n                            onChange={this.onChange}>\n                            </Input>\n\n                            <Button \n                            color=\"dark\"\n                            style={{marginTop: '2rem'}}\n                            block>\n                            LOGIN</Button>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n})\n\nexport default connect(\n    mapStateToProps, \n    { login, clearErrors }\n    )(LoginModal);"]},"metadata":{},"sourceType":"module"}